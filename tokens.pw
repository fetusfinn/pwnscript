|
|   pwn script token list
|
|
|
|   !!!   DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING   !!!
|   !!!                MAKE A BACKUP BEFORE YOU EDIT                 !!!
|   !!!             THE ORDER OF THIS LIST IS IMPORTANT              !!!
|


| Keywords
#   1

void        | wildcard type | has a value of null | has no type yet | can still be assigned
byte        | char | boolean | tiny number | value will be stored as a char but displayed as a number e.g. 0-255, converted to text via casting
num         | non decimal number
dec         | decimal number
long        | precise decimal number | unused | double in c++ not a long
string      | string of characters | any text that isnt a single char

null        | null value | default value of all variables | will be returns when a function fails to return its intended return type

use         | used to import other files that are needed for this script

var         | used to define a local  variable | only accessable in the file it is defined | the token directly after this will be the variable name
global      | used to define a global variable that will be accessable throughout the whole script (after it has been registered)

if          | if statement
for         | for loop
while       | while loop

func        | see < functions >


| Seperators
#   2

,           | used while defining and assigning variables to seperate them
{           | array constructor start
}           | array constructor end
[]          | array access   operator
(           | calling a function
)           |

"           | string start / end | if a string isnt ended then it will end at the end of the line
'           | byte   start / end | if longer than 1 char then the first char is used


| Operators
#   3

&           | and
?           | or
!           | not           | also used to end a statement e.g. if ... !if
==          | equality
!=          | not equals
+           | addition
-           | minus
*           | multiplication
/           | division
%           | modulus
=           | assinment
<           | less than
>           | greater than
++          | increment
--          | decrement
.           | object access | decimal point


| Comments
|
#   4

|           | single line comment
| multi line| multi line comment open and close | multi line comments are alwyas two single lines next to each other, e.g. single = "/", multi = "//"
